# -*- coding: utf-8 -*-
"""Elias_Juliana_Diego_Codigo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W7FzUIcLqHcn3yCGO6AYq_xgqY0NiRyz
"""

import numpy as np
esptocryp = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13,
             'n': 14, 'ñ': 15,'o': 16, 'p': 17, 'q': 18, 'r': 19, 's': 20, 't': 21, 'u': 22, 'v': 23, 'w': 24, 'x': 25,
             'y': 26, 'z': 27, ' ': 28}
abecedarioesp= {1:'a',2:'b',3:'c',4:'d',5:'e',6:'f',7:'g',8:'h',9:'i',10:'j',11:'k',12:'l',13:'m',14:'n',15:'ñ', 16:'o',
                 17:'p',18:'q', 19:'r',20:'s',21:'t',22:'u',23:'v', 24:'w',25:'x', 26:'y',27:'z', 28:' '}

"""Convierte un arreglo con determinado mensaje en un arreglo con numeros siguiendo la enumeracion de esptocryp"""
def Enumeration():
    encrypted = []
    message = input("Ingrese el mensaje a encriptar...").lower()
    for letter in message:
        encrypted.append(esptocryp[letter])
    message = encrypted
    return message

"""Convierte el mensaje en una matriz para que sea posible hacer la multiplicacion y encriptar el mensaje"""
def Encryption(ogmatrix, encrypted):
    col = len(ogmatrix)
    while len(encrypted) % col != 0:
        encrypted.append(28)
    submatrix = int(len(encrypted)/col)
    encrypted = np.array(encrypted)
    matrizReforma = encrypted.reshape(submatrix,col)
    encrypted = matrizReforma @ ogmatrix
    return encrypted

"""Obtenemos la matriz inversa de la matriz original y multiplicamos por la matriz encriptada.
De esta forma obtenemos el mensaje original en formato numerico"""
def Decryption(ogmatrix, Renglones):
    og_inv=np.linalg.inv(ogmatrix)
    Renglones_inv=[]
    for renglon in Renglones:
        renglon = np.dot(renglon,og_inv)
        renglon = renglon.round().astype(int)
        Renglones_inv.append(renglon)
    for renglon in Renglones_inv:
        for num in renglon:
            if(num):
                print(abecedarioesp[num], end =" ")

"""Recomiendo que para ingresar una matriz en las funciones, primero creemos una como en este caso A"""
A = np.array([[1,2,-3,4,5],
             [-2,-5,8,-8,-9],
             [1,2,-2,7,9],
             [1,1,0,6,12],
             [2,4,-6,8,11]])
B = np.array([[3,2,5],
              [2,-1,4],
              [-1,2,1]])
mensaje = Enumeration()
print(mensaje)
mensaje = Encryption(B,mensaje)
print(mensaje)
mensaje = Decryption(B,mensaje)
print(mensaje)